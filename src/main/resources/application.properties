# General application configuration
quarkus.application.name=customer-registry
quarkus.application.version=1.0.0

# OpenAPI/Swagger Configuration
quarkus.smallrye-openapi.info.title=Customer Registry API
quarkus.smallrye-openapi.info.version=1.0.0
quarkus.smallrye-openapi.info.description=API for managing clients
quarkus.swagger-ui.always-include=true

# --- Development Profile --- 
%dev.quarkus.log.level=INFO
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:customerdb_dev;DB_CLOSE_DELAY=-1
%dev.quarkus.datasource.username=sa
%dev.quarkus.datasource.password=sa
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script=import.sql

# --- Test Profile --- 
%test.quarkus.log.level=INFO
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:customerdb_test;DB_CLOSE_DELAY=-1
%test.quarkus.datasource.username=sa
%test.quarkus.datasource.password=sa
%test.quarkus.hibernate-orm.database.generation=drop-and-create
%test.quarkus.hibernate-orm.sql-load-script=import.sql

# --- Production Profile --- 
%prod.quarkus.log.level=WARN
%prod.quarkus.datasource.db-kind=mssql
%prod.quarkus.datasource.jdbc.url=${MSSQL_URL}
%prod.quarkus.datasource.username=${MSSQL_USER}
%prod.quarkus.datasource.password=${MSSQL_PASSWORD}
%prod.quarkus.hibernate-orm.database.generation=validate

# JWT Authentication Configuration
# Public key for VERIFYING incoming tokens (CORRECT PROPERTY NAME)
mp.jwt.verify.publickey.location=tokens/public-key.pem

# Private key for SIGNING/GENERATING tokens (used in tests)
smallrye.jwt.sign.key.location=tokens/private-key.pem

# We now mandate that the issuer in the token MUST be this value
mp.jwt.verify.issuer=https://your-auth-server.com
